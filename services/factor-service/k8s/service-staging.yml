apiVersion: apps/v1
kind: Deployment
metadata:
  name: factor-service-deployment
  labels:
    app: factor-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: factor-service
  template:
    metadata:
      labels:
        app: factor-service
    spec:
      containers:
      - name: factor-service
        image: gcr.io/devenv-215523/factor-service:${SERVICE_VERSION}
        env:
          - name: POSTGRES_SCHEMA
            value: "${DB_SCHEMA}"
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: factor-db-credentials
                key: username
          - name: POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: factor-db-credentials
                key: password
          - name: POSTGRES_DB
            value: "factor-db"
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=devenv-215523:us-east1:annotations-instance=tcp:5432",
                  "-credential_file=/secrets/cloudsql/staging-service-account.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: service-account-key
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
        - name: service-account-key
          secret:
            secretName: service-account-key
---
apiVersion: v1
kind: Service
metadata:
  name: factor-service-service
  labels:
    app: factor-service
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: factor-service